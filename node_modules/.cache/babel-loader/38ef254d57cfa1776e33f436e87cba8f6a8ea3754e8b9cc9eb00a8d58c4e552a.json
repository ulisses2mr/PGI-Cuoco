{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\PGI\\\\cuoco\\\\src\\\\pages\\\\Learn\\\\learn.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../../components/Navbar/navbar\";\nimport Button from \"../../components/Button/button\";\nimport ovo from \"../../assets/imagePGI.png\";\nimport React from \"react\";\nimport \"./learn.css\";\n\n// Recursive Tree Component (Horizontal Layout)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  x = 0,\n  y = 0,\n  parentX = null,\n  parentY = null\n}) => {\n  const childXOffset = 150; // Space between levels\n  const childYOffset = 100; // Space between siblings\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [parentX !== null && parentY !== null && /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: \"absolute\",\n        overflow: \"visible\",\n        zIndex: -1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: parentX + 25 // Parent node center\n        ,\n        y1: parentY + 25,\n        x2: x // Child node center\n        ,\n        y2: y + 25,\n        stroke: \"black\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: x,\n        top: y,\n        width: \"50px\",\n        height: \"50px\",\n        backgroundColor: \"#ffecb3\",\n        borderRadius: \"50%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        border: \"1px solid #ffca28\",\n        fontSize: \"20px\"\n      },\n      children: node.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), node.children && node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: child,\n      x: x + childXOffset // Move horizontally\n      ,\n      y: y + index * childYOffset - (node.children.length - 1) * (childYOffset / 2) // Spread vertically\n      ,\n      parentX: x,\n      parentY: y\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Learn Component\n_c = TreeNode;\nexport default function Learn() {\n  _s();\n  const navigate = useNavigate();\n\n  // Tree data for the egg tree\n  const treeData = {\n    label: \"üç≥\",\n    children: [{\n      label: \"üç≥\",\n      children: [{\n        label: \"üç≥\"\n      }, {\n        label: \"üç≥\"\n      }]\n    }, {\n      label: \"üç≥\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ovo,\n        alt: \"ovo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"botDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Descobre novos pratos todos os dias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textInfo\",\n            children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed maximus non turpis vitae pellentesque.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            click: () => navigate(\"/learn\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          height: \"400px\",\n          width: \"800px\",\n          margin: \"50px auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TreeNode, {\n          node: treeData,\n          x: 50,\n          y: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Learn, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Learn;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"Learn\");","map":{"version":3,"names":["useNavigate","Navbar","Button","ovo","React","jsxDEV","_jsxDEV","Fragment","_Fragment","TreeNode","node","x","y","parentX","parentY","childXOffset","childYOffset","children","style","position","overflow","zIndex","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","left","top","width","height","backgroundColor","borderRadius","display","justifyContent","alignItems","border","fontSize","label","map","child","index","length","_c","Learn","_s","navigate","treeData","className","src","alt","click","margin","_c2","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/PGI/cuoco/src/pages/Learn/learn.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar/navbar\";\r\nimport Button from \"../../components/Button/button\";\r\nimport ovo from \"../../assets/imagePGI.png\";\r\nimport React from \"react\";\r\nimport \"./learn.css\";\r\n\r\n// Recursive Tree Component (Horizontal Layout)\r\nconst TreeNode = ({ node, x = 0, y = 0, parentX = null, parentY = null }) => {\r\n  const childXOffset = 150; // Space between levels\r\n  const childYOffset = 100; // Space between siblings\r\n\r\n  return (\r\n    <div>\r\n      {/* Connection line if there's a parent */}\r\n      {parentX !== null && parentY !== null && (\r\n        <svg\r\n          style={{\r\n            position: \"absolute\",\r\n            overflow: \"visible\",\r\n            zIndex: -1,\r\n          }}\r\n        >\r\n          <line\r\n            x1={parentX + 25} // Parent node center\r\n            y1={parentY + 25}\r\n            x2={x} // Child node center\r\n            y2={y + 25}\r\n            stroke=\"black\"\r\n            strokeWidth=\"2\"\r\n          />\r\n        </svg>\r\n      )}\r\n\r\n      {/* Render the current node */}\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          left: x,\r\n          top: y,\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n          backgroundColor: \"#ffecb3\",\r\n          borderRadius: \"50%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          border: \"1px solid #ffca28\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        {node.label}\r\n      </div>\r\n\r\n      {/* Render child nodes recursively */}\r\n      {node.children &&\r\n        node.children.map((child, index) => (\r\n          <TreeNode\r\n            key={index}\r\n            node={child}\r\n            x={x + childXOffset} // Move horizontally\r\n            y={y + index * childYOffset - (node.children.length - 1) * (childYOffset / 2)} // Spread vertically\r\n            parentX={x}\r\n            parentY={y}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Learn Component\r\nexport default function Learn() {\r\n  const navigate = useNavigate();\r\n\r\n  // Tree data for the egg tree\r\n  const treeData = {\r\n    label: \"üç≥\",\r\n    children: [\r\n      {\r\n        label: \"üç≥\",\r\n        children: [\r\n          { label: \"üç≥\" },\r\n          { label: \"üç≥\" },\r\n        ],\r\n      },\r\n      {\r\n        label: \"üç≥\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"homepage\">\r\n        <img src={ovo} alt=\"ovo\" />\r\n        <div className=\"botDiv\">\r\n          <div className=\"sideInfo\">\r\n            <h1>Descobre novos pratos todos os dias</h1>\r\n            <p className=\"textInfo\">\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed maximus non turpis vitae pellentesque.\r\n            </p>\r\n            <Button click={() => navigate(\"/learn\")} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Egg Tree Section */}\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"400px\",\r\n            width: \"800px\",\r\n            margin: \"50px auto\",\r\n          }}\r\n        >\r\n          <TreeNode node={treeData} x={50} y={150} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}