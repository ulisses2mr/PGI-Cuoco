{"ast":null,"code":"import{useNavigate}from\"react-router-dom\";import Navbar from\"../../components/Navbar/navbar\";import Button from\"../../components/Button/button\";import ovo from\"../../assets/imagePGI.png\";import Popup from\"../../components/Popup/popup\";import logo from\"../../assets/logo3.png\";// Using a different image for the tree nodes\nimport React from\"react\";import\"./learn.css\";import{useState}from\"react\";// Recursive Tree Component (Horizontal Layout with Larger Nodes)\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TreeNode=_ref=>{let{node,x=0,y=0,parentX=null,parentY=null,img_node=logo,showPopup}=_ref;const childXOffset=300;// Increased space between levels\nconst childYOffset=200;// Increased space between siblings\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[parentX!==null&&parentY!==null&&/*#__PURE__*/_jsx(\"svg\",{style:{position:\"absolute\",top:0,left:0,overflow:\"visible\",zIndex:1// Ensure it's beneath the nodes but still visible\n},children:/*#__PURE__*/_jsx(\"line\",{x1:parentX+50// Start point for the line (center of parent)\n,y1:parentY+50,x2:x+50// End point for the line (center of child)\n,y2:y+50,stroke:\"black\",strokeWidth:\"4\"})}),/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",left:x,top:y,width:\"120px\",// Increased node width\nheight:\"120px\",// Increased node height\ndisplay:\"flex\",justifyContent:\"center\",alignItems:\"center\"},children:/*#__PURE__*/_jsx(\"img\",{onClick:showPopup// Trigger the showPopup function\n,src:img_node,alt:\"Egg\",style:{width:\"100px\",height:\"100px\",objectFit:\"cover\",borderRadius:\"15px\",border:\"6px solid black\",zIndex:2,cursor:\"pointer\"}})}),node.children&&node.children.map((child,index)=>/*#__PURE__*/_jsx(TreeNode,{node:child,x:x+childXOffset// Adjusting horizontal distance for children\n,y:y+index*childYOffset-(node.children.length-1)*(childYOffset/2)// Adjusting vertical spread\n,parentX:x,parentY:y,showPopup:showPopup// Pass showPopup down to the child\n},index))]});};export default function Learn(){const[isPopupVisible,setPopupVisible]=useState(false);// UseState to control popup visibility\nconst showPopup=()=>{setPopupVisible(true);// Set popup visibility to true\n};const hidePopup=()=>{setPopupVisible(false);// Set popup visibility to false\n};// Tree data for the egg tree\nconst treeData={children:[{children:[{children:[{children:[]},{children:[]}]},{children:[]},{children:[]}]}]};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"homepage\",children:[/*#__PURE__*/_jsx(Popup,{isPopupVisible:isPopupVisible,setPopupVisible:setPopupVisible,hidePopup:hidePopup}),/*#__PURE__*/_jsx(\"div\",{style:{position:\"relative\",height:\"800px\",width:\"1200px\",margin:\"50px auto\"},children:/*#__PURE__*/_jsx(TreeNode,{node:treeData,x:0,y:350,showPopup:showPopup})})]})]});}","map":{"version":3,"names":["useNavigate","Navbar","Button","ovo","Popup","logo","React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TreeNode","_ref","node","x","y","parentX","parentY","img_node","showPopup","childXOffset","childYOffset","children","style","position","top","left","overflow","zIndex","x1","y1","x2","y2","stroke","strokeWidth","width","height","display","justifyContent","alignItems","onClick","src","alt","objectFit","borderRadius","border","cursor","map","child","index","length","Learn","isPopupVisible","setPopupVisible","hidePopup","treeData","className","margin"],"sources":["C:/Users/HP/Desktop/PGI/cuoco/src/pages/Learn/learn.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar/navbar\";\r\nimport Button from \"../../components/Button/button\";\r\nimport ovo from \"../../assets/imagePGI.png\";\r\nimport Popup from \"../../components/Popup/popup\";\r\nimport logo from \"../../assets/logo3.png\"; // Using a different image for the tree nodes\r\nimport React from \"react\";\r\nimport \"./learn.css\";\r\nimport { useState } from \"react\";\r\n\r\n// Recursive Tree Component (Horizontal Layout with Larger Nodes)\r\nconst TreeNode = ({ node, x = 0, y = 0, parentX = null, parentY = null, img_node = logo, showPopup }) => {\r\n  const childXOffset = 300; // Increased space between levels\r\n  const childYOffset = 200; // Increased space between siblings\r\n\r\n  return (\r\n    <div>\r\n      {/* Render Connection Lines */}\r\n      {parentX !== null && parentY !== null && (\r\n        <svg\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            overflow: \"visible\",\r\n            zIndex: 1, // Ensure it's beneath the nodes but still visible\r\n          }}\r\n        >\r\n          <line\r\n            x1={parentX + 50} // Start point for the line (center of parent)\r\n            y1={parentY + 50}\r\n            x2={x + 50} // End point for the line (center of child)\r\n            y2={y + 50}\r\n            stroke=\"black\"\r\n            strokeWidth=\"4\"\r\n          />\r\n        </svg>\r\n      )}\r\n\r\n      {/* Render the current node (egg image with a frame) */}\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          left: x,\r\n          top: y,\r\n          width: \"120px\", // Increased node width\r\n          height: \"120px\", // Increased node height\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          onClick={showPopup}  // Trigger the showPopup function\r\n          src={img_node}\r\n          alt=\"Egg\"\r\n          style={{\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            objectFit: \"cover\",\r\n            borderRadius: \"15px\",\r\n            border: \"6px solid black\",\r\n            zIndex: 2,\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Render child nodes recursively */}\r\n      {node.children &&\r\n        node.children.map((child, index) => (\r\n          <TreeNode\r\n            key={index}\r\n            node={child}\r\n            x={x + childXOffset} // Adjusting horizontal distance for children\r\n            y={\r\n              y +\r\n              index * childYOffset -\r\n              (node.children.length - 1) * (childYOffset / 2) // Adjusting vertical spread\r\n            }\r\n            parentX={x}\r\n            parentY={y}\r\n            showPopup={showPopup} // Pass showPopup down to the child\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Learn() {\r\n  const [isPopupVisible, setPopupVisible] = useState(false);  // UseState to control popup visibility\r\n\r\n  const showPopup = () => {\r\n    setPopupVisible(true);  // Set popup visibility to true\r\n  };\r\n\r\n  const hidePopup = () => {\r\n    setPopupVisible(false);  // Set popup visibility to false\r\n  };\r\n\r\n  // Tree data for the egg tree\r\n  const treeData = {\r\n    children: [\r\n      {\r\n        children: [\r\n          { children: [\r\n            { children: [] },\r\n            { children: [] },\r\n          ] },\r\n          { children: [] },\r\n          { children: [] },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"homepage\">\r\n        {/* Render the Popup, passing visibility state and setter */}\r\n        <Popup isPopupVisible={isPopupVisible} setPopupVisible={setPopupVisible} hidePopup={hidePopup} />\r\n\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"800px\",\r\n            width: \"1200px\",\r\n            margin: \"50px auto\",\r\n          }}\r\n        >\r\n          {/* Render the tree and pass the showPopup function to TreeNode */}\r\n          <TreeNode node={treeData} x={0} y={350} showPopup={showPopup} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}