{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\PGI\\\\cuoco\\\\src\\\\pages\\\\Learn\\\\learn.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../../components/Navbar/navbar\";\nimport Button from \"../../components/Button/button\";\nimport ovo from \"../../assets/imagePGI.png\";\nimport Popup from \"../../components/Popup/popup\";\nimport logo from \"../../assets/logo3.png\"; // Using a different image for the tree nodes\nimport React from \"react\";\nimport \"./learn.css\";\n\n// Recursive Tree Component (Horizontal Layout with Larger Nodes)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  x = 0,\n  y = 0,\n  parentX = null,\n  parentY = null,\n  img_node = logo\n}) => {\n  const childXOffset = 300; // Increased space between levels\n  const childYOffset = 200; // Increased space between siblings\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [parentX !== null && parentY !== null && /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        overflow: \"visible\",\n        zIndex: 1 // Ensure it's beneath the nodes but still visible\n      },\n      children: /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: parentX + 50 // Start point for the line (center of parent)\n        ,\n        y1: parentY + 50,\n        x2: x + 50 // End point for the line (center of child)\n        ,\n        y2: y + 50,\n        stroke: \"black\",\n        strokeWidth: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: x,\n        top: y,\n        width: \"120px\",\n        // Increased node width\n        height: \"120px\",\n        // Increased node height\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: console.log(\"ola\"),\n        src: img_node,\n        alt: \"Egg\",\n        style: {\n          width: \"100px\",\n          height: \"100px\",\n          objectFit: \"cover\",\n          borderRadius: \"15px\",\n          border: \"6px solid black\",\n          zIndex: 2,\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), node.children && node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: child,\n      x: x + childXOffset // Adjusting horizontal distance for children\n      ,\n      y: y + index * childYOffset - (node.children.length - 1) * (childYOffset / 2) // Adjusting vertical spread\n      ,\n      parentX: x,\n      parentY: y\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Learn Component\n_c = TreeNode;\nexport default function Learn() {\n  // Tree data for the egg tree\n  const treeData = {\n    children: [{\n      children: [{\n        children: [{\n          children: []\n        }, {\n          children: []\n        }]\n      }, {\n        children: []\n      }, {\n        children: []\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          height: \"800px\",\n          // Increased container height\n          width: \"1200px\",\n          // Increased container width\n          margin: \"50px auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TreeNode, {\n          node: treeData,\n          x: 0,\n          y: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Learn;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"Learn\");","map":{"version":3,"names":["useNavigate","Navbar","Button","ovo","Popup","logo","React","jsxDEV","_jsxDEV","Fragment","_Fragment","TreeNode","node","x","y","parentX","parentY","img_node","childXOffset","childYOffset","children","style","position","top","left","overflow","zIndex","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","width","height","display","justifyContent","alignItems","onClick","console","log","src","alt","objectFit","borderRadius","border","cursor","map","child","index","length","_c","Learn","treeData","className","margin","_c2","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/PGI/cuoco/src/pages/Learn/learn.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar/navbar\";\r\nimport Button from \"../../components/Button/button\";\r\nimport ovo from \"../../assets/imagePGI.png\";\r\nimport Popup from \"../../components/Popup/popup\";\r\nimport logo from \"../../assets/logo3.png\"; // Using a different image for the tree nodes\r\nimport React from \"react\";\r\nimport \"./learn.css\";\r\n\r\n// Recursive Tree Component (Horizontal Layout with Larger Nodes)\r\nconst TreeNode = ({ node, x = 0, y = 0, parentX = null, parentY = null, img_node = logo }) => {\r\n  const childXOffset = 300; // Increased space between levels\r\n  const childYOffset = 200; // Increased space between siblings\r\n\r\n  return (\r\n    <div>\r\n      {/* Render Connection Lines */}\r\n      {parentX !== null && parentY !== null && (\r\n        <svg\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            overflow: \"visible\",\r\n            zIndex: 1, // Ensure it's beneath the nodes but still visible\r\n          }}\r\n        >\r\n          <line\r\n            x1={parentX + 50} // Start point for the line (center of parent)\r\n            y1={parentY + 50}\r\n            x2={x + 50} // End point for the line (center of child)\r\n            y2={y + 50}\r\n            stroke=\"black\"\r\n            strokeWidth=\"4\"\r\n          />\r\n        </svg>\r\n      )}\r\n\r\n      {/* Render the current node (egg image with a frame) */}\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          left: x,\r\n          top: y,\r\n          width: \"120px\", // Increased node width\r\n          height: \"120px\", // Increased node height\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          onClick={console.log(\"ola\")}\r\n          src={img_node}\r\n          alt=\"Egg\"\r\n          style={{\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            objectFit: \"cover\",\r\n            borderRadius: \"15px\",\r\n            border: \"6px solid black\",\r\n            zIndex: 2,\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Render child nodes recursively */}\r\n      {node.children &&\r\n        node.children.map((child, index) => (\r\n          <TreeNode\r\n            key={index}\r\n            node={child}\r\n            x={x + childXOffset} // Adjusting horizontal distance for children\r\n            y={\r\n              y +\r\n              index * childYOffset -\r\n              (node.children.length - 1) * (childYOffset / 2) // Adjusting vertical spread\r\n            }\r\n            parentX={x}\r\n            parentY={y}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Learn Component\r\nexport default function Learn() {\r\n  // Tree data for the egg tree\r\n  const treeData = {\r\n    children: [\r\n      {\r\n        children: [\r\n          { children: [\r\n            { children: [] },\r\n            { children: [] },\r\n          ] },\r\n          { children: [] },\r\n          { children: [] },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"homepage\">\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"800px\", // Increased container height\r\n            width: \"1200px\", // Increased container width\r\n            margin: \"50px auto\",\r\n          }}\r\n        >\r\n          <TreeNode node={treeData} x={0} y={350} />\r\n          <Popup/> \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,GAAG,MAAM,2BAA2B;AAC3C,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,IAAI,MAAM,wBAAwB,CAAC,CAAC;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,CAAC,GAAG,CAAC;EAAEC,CAAC,GAAG,CAAC;EAAEC,OAAO,GAAG,IAAI;EAAEC,OAAO,GAAG,IAAI;EAAEC,QAAQ,GAAGZ;AAAK,CAAC,KAAK;EAC5F,MAAMa,YAAY,GAAG,GAAG,CAAC,CAAC;EAC1B,MAAMC,YAAY,GAAG,GAAG,CAAC,CAAC;;EAE1B,oBACEX,OAAA;IAAAY,QAAA,GAEGL,OAAO,KAAK,IAAI,IAAIC,OAAO,KAAK,IAAI,iBACnCR,OAAA;MACEa,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,QAAQ,EAAE,SAAS;QACnBC,MAAM,EAAE,CAAC,CAAE;MACb,CAAE;MAAAN,QAAA,eAEFZ,OAAA;QACEmB,EAAE,EAAEZ,OAAO,GAAG,EAAG,CAAC;QAAA;QAClBa,EAAE,EAAEZ,OAAO,GAAG,EAAG;QACjBa,EAAE,EAAEhB,CAAC,GAAG,EAAG,CAAC;QAAA;QACZiB,EAAE,EAAEhB,CAAC,GAAG,EAAG;QACXiB,MAAM,EAAC,OAAO;QACdC,WAAW,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAGD5B,OAAA;MACEa,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBE,IAAI,EAAEX,CAAC;QACPU,GAAG,EAAET,CAAC;QACNuB,KAAK,EAAE,OAAO;QAAE;QAChBC,MAAM,EAAE,OAAO;QAAE;QACjBC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MAAArB,QAAA,eAEFZ,OAAA;QACEkC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAE;QAC5BC,GAAG,EAAE5B,QAAS;QACd6B,GAAG,EAAC,KAAK;QACTzB,KAAK,EAAE;UACLgB,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,OAAO;UACfS,SAAS,EAAE,OAAO;UAClBC,YAAY,EAAE,MAAM;UACpBC,MAAM,EAAE,iBAAiB;UACzBvB,MAAM,EAAE,CAAC;UACTwB,MAAM,EAAE;QACV;MAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLxB,IAAI,CAACQ,QAAQ,IACZR,IAAI,CAACQ,QAAQ,CAAC+B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC7B7C,OAAA,CAACG,QAAQ;MAEPC,IAAI,EAAEwC,KAAM;MACZvC,CAAC,EAAEA,CAAC,GAAGK,YAAa,CAAC;MAAA;MACrBJ,CAAC,EACCA,CAAC,GACDuC,KAAK,GAAGlC,YAAY,GACpB,CAACP,IAAI,CAACQ,QAAQ,CAACkC,MAAM,GAAG,CAAC,KAAKnC,YAAY,GAAG,CAAC,CAAC,CAAC;MACjD;MACDJ,OAAO,EAAEF,CAAE;MACXG,OAAO,EAAEF;IAAE,GATNuC,KAAK;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUX,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;;AAED;AAAAmB,EAAA,GA7EM5C,QAAQ;AA8Ed,eAAe,SAAS6C,KAAKA,CAAA,EAAG;EAC9B;EACA,MAAMC,QAAQ,GAAG;IACfrC,QAAQ,EAAE,CACR;MACEA,QAAQ,EAAE,CACR;QAAEA,QAAQ,EAAE,CACV;UAAEA,QAAQ,EAAE;QAAG,CAAC,EAChB;UAAEA,QAAQ,EAAE;QAAG,CAAC;MAChB,CAAC,EACH;QAAEA,QAAQ,EAAE;MAAG,CAAC,EAChB;QAAEA,QAAQ,EAAE;MAAG,CAAC;IAEpB,CAAC;EAEL,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA,CAACP,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5B,OAAA;MAAKkD,SAAS,EAAC,UAAU;MAAAtC,QAAA,eACvBZ,OAAA;QACEa,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBgB,MAAM,EAAE,OAAO;UAAE;UACjBD,KAAK,EAAE,QAAQ;UAAE;UACjBsB,MAAM,EAAE;QACV,CAAE;QAAAvC,QAAA,gBAEFZ,OAAA,CAACG,QAAQ;UAACC,IAAI,EAAE6C,QAAS;UAAC5C,CAAC,EAAE,CAAE;UAACC,CAAC,EAAE;QAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1C5B,OAAA,CAACJ,KAAK;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACwB,GAAA,GAnCuBJ,KAAK;AAAA,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}