{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\PGI\\\\src\\\\pages\\\\Learn\\\\learn.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../../components/Navbar/navbar\";\nimport Button from \"../../components/Button/button\";\nimport ovo from \"../../assets/imagePGI.png\";\nimport Popup from \"../../components/Popup/popup\";\nimport logo from \"../../assets/logo3.png\"; // Using a different image for the tree nodes\nimport React from \"react\";\nimport \"./learn.css\";\nimport { useState } from \"react\";\n\n// Recursive Tree Component (Horizontal Layout with Larger Nodes)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Learn() {\n  _s();\n  const [isPopupVisible, setPopupVisible] = useState(false); // UseState to control popup visibility\n\n  const showPopup = () => {\n    setPopupVisible(true); // Set popup visibility to true\n  };\n  const hidePopup = () => {\n    setPopupVisible(false); // Set popup visibility to false\n  };\n\n  // Tree data for the egg tree\n  const treeData = {\n    children: [{\n      children: [{\n        children: [{\n          children: []\n        }, {\n          children: []\n        }]\n      }, {\n        children: []\n      }, {\n        children: []\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage\",\n      children: [/*#__PURE__*/_jsxDEV(Popup, {\n        isPopupVisible: isPopupVisible,\n        setPopupVisible: setPopupVisible,\n        hidePopup: hidePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          height: \"800px\",\n          width: \"1200px\",\n          margin: \"50px auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TreeNode, {\n          node: treeData,\n          x: 0,\n          y: 350,\n          showPopup: showPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Learn, \"SkAYXZZdZM/nSQHvx8SoPhyJNDQ=\");\n_c = Learn;\nvar _c;\n$RefreshReg$(_c, \"Learn\");","map":{"version":3,"names":["useNavigate","Navbar","Button","ovo","Popup","logo","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Learn","_s","isPopupVisible","setPopupVisible","showPopup","hidePopup","treeData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","position","height","width","margin","TreeNode","node","x","y","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/PGI/src/pages/Learn/learn.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar/navbar\";\r\nimport Button from \"../../components/Button/button\";\r\nimport ovo from \"../../assets/imagePGI.png\";\r\nimport Popup from \"../../components/Popup/popup\";\r\nimport logo from \"../../assets/logo3.png\"; // Using a different image for the tree nodes\r\nimport React from \"react\";\r\nimport \"./learn.css\";\r\nimport { useState } from \"react\";\r\n\r\n// Recursive Tree Component (Horizontal Layout with Larger Nodes)\r\n\r\n\r\nexport default function Learn() {\r\n  const [isPopupVisible, setPopupVisible] = useState(false);  // UseState to control popup visibility\r\n\r\n  const showPopup = () => {\r\n    setPopupVisible(true);  // Set popup visibility to true\r\n  };\r\n\r\n  const hidePopup = () => {\r\n    setPopupVisible(false);  // Set popup visibility to false\r\n  };\r\n\r\n  // Tree data for the egg tree\r\n  const treeData = {\r\n    children: [\r\n      {\r\n        children: [\r\n          { children: [\r\n            { children: [] },\r\n            { children: [] },\r\n          ] },\r\n          { children: [] },\r\n          { children: [] },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"homepage\">\r\n        {/* Render the Popup, passing visibility state and setter */}\r\n        <Popup isPopupVisible={isPopupVisible} setPopupVisible={setPopupVisible} hidePopup={hidePopup} />\r\n\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            height: \"800px\",\r\n            width: \"1200px\",\r\n            margin: \"50px auto\",\r\n          }}\r\n        >\r\n          {/* Render the tree and pass the showPopup function to TreeNode */}\r\n          <TreeNode node={treeData} x={0} y={350} showPopup={showPopup} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,GAAG,MAAM,2BAA2B;AAC3C,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,IAAI,MAAM,wBAAwB,CAAC,CAAC;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGA,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,cAAc,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAE5D,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBD,eAAe,CAAC,IAAI,CAAC,CAAC,CAAE;EAC1B,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBF,eAAe,CAAC,KAAK,CAAC,CAAC,CAAE;EAC3B,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAG;IACfC,QAAQ,EAAE,CACR;MACEA,QAAQ,EAAE,CACR;QAAEA,QAAQ,EAAE,CACV;UAAEA,QAAQ,EAAE;QAAG,CAAC,EAChB;UAAEA,QAAQ,EAAE;QAAG,CAAC;MAChB,CAAC,EACH;QAAEA,QAAQ,EAAE;MAAG,CAAC,EAChB;QAAEA,QAAQ,EAAE;MAAG,CAAC;IAEpB,CAAC;EAEL,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA,CAACR,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVd,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAL,QAAA,gBAEvBV,OAAA,CAACL,KAAK;QAACU,cAAc,EAAEA,cAAe;QAACC,eAAe,EAAEA,eAAgB;QAACE,SAAS,EAAEA;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEjGd,OAAA;QACEgB,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,QAAQ;UACfC,MAAM,EAAE;QACV,CAAE;QAAAV,QAAA,eAGFV,OAAA,CAACqB,QAAQ;UAACC,IAAI,EAAEb,QAAS;UAACc,CAAC,EAAE,CAAE;UAACC,CAAC,EAAE,GAAI;UAACjB,SAAS,EAAEA;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACV,EAAA,CAhDuBD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}