{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\PGI\\\\src\\\\pages\\\\Learn\\\\learn.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  x = 0,\n  y = 0,\n  parentX = null,\n  parentY = null,\n  img_node = logo,\n  showPopup\n}) => {\n  const childXOffset = 300; // Increased space between levels\n  const childYOffset = 200; // Increased space between siblings\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [parentX !== null && parentY !== null && /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        overflow: \"visible\",\n        zIndex: 1 // Ensure it's beneath the nodes but still visible\n      },\n      children: /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: parentX + 50 // Start point for the line (center of parent)\n        ,\n        y1: parentY + 50,\n        x2: x + 50 // End point for the line (center of child)\n        ,\n        y2: y + 50,\n        stroke: \"black\",\n        strokeWidth: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: x,\n        top: y,\n        width: \"120px\",\n        // Increased node width\n        height: \"120px\",\n        // Increased node height\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => console.log(node.key) // Log the node's key\n        ,\n        src: img_node,\n        alt: \"Node\",\n        style: {\n          width: \"100px\",\n          height: \"100px\",\n          objectFit: \"cover\",\n          borderRadius: \"15px\",\n          border: \"6px solid black\",\n          zIndex: 2,\n          cursor: \"pointer\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), node.children && node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n      // React's internal key for this node\n      node: {\n        ...child,\n        key: `${node.key || 'root'}-${index}`\n      } // Add a unique key to each child node\n      ,\n      x: x + childXOffset // Adjusting horizontal distance for children\n      ,\n      y: y + index * childYOffset - (node.children.length - 1) * (childYOffset / 2) // Adjusting vertical spread\n      ,\n      parentX: x,\n      parentY: y,\n      img_node: img_node,\n      showPopup: showPopup // Pass showPopup down to the child\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = TreeNode;\nvar _c;\n$RefreshReg$(_c, \"TreeNode\");","map":{"version":3,"names":["TreeNode","node","x","y","parentX","parentY","img_node","logo","showPopup","childXOffset","childYOffset","_jsxDEV","children","style","position","top","left","overflow","zIndex","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","width","height","display","justifyContent","alignItems","onClick","console","log","key","src","alt","objectFit","borderRadius","border","cursor","map","child","index","length","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/PGI/src/pages/Learn/learn.js"],"sourcesContent":["const TreeNode = ({ node, x = 0, y = 0, parentX = null, parentY = null, img_node = logo, showPopup }) => {\r\n  const childXOffset = 300; // Increased space between levels\r\n  const childYOffset = 200; // Increased space between siblings\r\n\r\n  return (\r\n    <div>\r\n      {/* Render Connection Lines */}\r\n      {parentX !== null && parentY !== null && (\r\n        <svg\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            overflow: \"visible\",\r\n            zIndex: 1, // Ensure it's beneath the nodes but still visible\r\n          }}\r\n        >\r\n          <line\r\n            x1={parentX + 50} // Start point for the line (center of parent)\r\n            y1={parentY + 50}\r\n            x2={x + 50} // End point for the line (center of child)\r\n            y2={y + 50}\r\n            stroke=\"black\"\r\n            strokeWidth=\"4\"\r\n          />\r\n        </svg>\r\n      )}\r\n\r\n      {/* Render the current node (egg image with a frame) */}\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          left: x,\r\n          top: y,\r\n          width: \"120px\", // Increased node width\r\n          height: \"120px\", // Increased node height\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img\r\n          onClick={() => console.log(node.key)} // Log the node's key\r\n          src={img_node}\r\n          alt=\"Node\"\r\n          style={{\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            objectFit: \"cover\",\r\n            borderRadius: \"15px\",\r\n            border: \"6px solid black\",\r\n            zIndex: 2,\r\n            cursor: \"pointer\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Render child nodes recursively */}\r\n      {node.children &&\r\n        node.children.map((child, index) => (\r\n          <TreeNode\r\n            key={index} // React's internal key for this node\r\n            node={{ ...child, key: `${node.key || 'root'}-${index}` }} // Add a unique key to each child node\r\n            x={x + childXOffset} // Adjusting horizontal distance for children\r\n            y={\r\n              y +\r\n              index * childYOffset -\r\n              (node.children.length - 1) * (childYOffset / 2) // Adjusting vertical spread\r\n            }\r\n            parentX={x}\r\n            parentY={y}\r\n            img_node={img_node}\r\n            showPopup={showPopup} // Pass showPopup down to the child\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}